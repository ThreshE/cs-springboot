<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.springboot</groupId>
	<artifactId>cs</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>cs</name>
	<description>Project Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.6.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<slf4j.api.version>1.7.5</slf4j.api.version>
		<springboot.starter.version>2.1.0</springboot.starter.version>
		<slf4j.log4j12.version>1.7.5</slf4j.log4j12.version>
		<log4j.version>1.2.17</log4j.version>
		<lombok.version>1.16.18</lombok.version>
		<springfox.swagger2.version>2.9.2</springfox.swagger2.version>
		<springfox.swagger.ui.version>2.9.2</springfox.swagger.ui.version>
		<swagger.bootstrap.ui.version>1.9.3</swagger.bootstrap.ui.version>
		<fastjson.version>1.2.4</fastjson.version>
		<druid.version>1.0.13</druid.version>
		<!--<mybatis.plus.version>2.3</mybatis.plus.version>-->
		<mybatis.version>1.3.0</mybatis.version>
		<mybatis.generator.core.version>1.3.2</mybatis.generator.core.version>
		<freemarker.version>2.3.23</freemarker.version>
		<guava.version>22.0</guava.version>
		<springboot.configuration.processor.version>2.1.6.RELEASE</springboot.configuration.processor.version>
		<dom4j.version>1.6.1</dom4j.version>
		<velocity.version>1.5</velocity.version>
		<mysql.connector.version>5.1.24</mysql.connector.version>
		<mail.version>1.4.7</mail.version>
		<springboot.starter.redis.version>1.3.8.RELEASE</springboot.starter.redis.version>
		<druid.springboot.starter.version>1.1.10</druid.springboot.starter.version>
		<dockerfile.maven.plugin.version>1.4.0</dockerfile.maven.plugin.version>


		<docker.repostory>47.244.51.250:12080</docker.repostory>
		<docker.project>springboot-cs/tomcat</docker.project>
		<docker.version>0823</docker.version>
	</properties>

	<dependencies>
		<!--springboot配置-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>

		<!--springboot配置-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<version>${springboot.configuration.processor.version}</version>
		</dependency>

		<!--aop-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>

		<!-- 添加WEB支持 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!--整合mybatis-->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>${springboot.starter.version}</version>
		</dependency>

		<!--数据配置-->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.connector.version}</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>


		<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-devtools</artifactId>
		<optional>true</optional>
		</dependency>

		<!--mybatis-->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>${mybatis.version}</version>
		</dependency>

		<!-- 添加Test支持 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!--swagger2-->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox.swagger2.version}</version>
		</dependency>

		<!--springfox-swagger-ui-->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${springfox.swagger.ui.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.xiaoymin</groupId>
			<artifactId>swagger-bootstrap-ui</artifactId>
			<version>${swagger.bootstrap.ui.version}</version>
		</dependency>

		<!--阿里云数据源-->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid-spring-boot-starter</artifactId>
			<version>${druid.springboot.starter.version}</version>
		</dependency>

		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
		</dependency>

		<!--<dependency>-->
			<!--<groupId>org.springframework.boot</groupId>-->
			<!--<artifactId>spring-boot-starter-data-redis</artifactId>-->
		<!--</dependency>-->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-redis</artifactId>
			<version>${springboot.starter.redis.version}</version>
		</dependency>

		<!--日志-->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.api.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.log4j12.version}</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>

		<!--lombok-->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>

		<!--druid数据源-->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>${fastjson.version}</version>
		</dependency>

		<!--邮件-->
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>${mail.version}</version>
		</dependency>

		<!--代码生成-->
		<dependency>
			<groupId>org.mybatis.generator</groupId>
			<artifactId>mybatis-generator-core</artifactId>
			<version>${mybatis.generator.core.version}</version>
		</dependency>

		<!--代码模版-->
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>${freemarker.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>

		<!--xml解析-->
		<dependency>
			<groupId>dom4j</groupId>
			<artifactId>dom4j</artifactId>
			<version>${dom4j.version}</version>
		</dependency>

		<dependency>
			<groupId>velocity</groupId>
			<artifactId>velocity</artifactId>
			<version>${velocity.version}</version>
		</dependency>

		<!--配置-->
		<dependency>
			<groupId>org.yaml</groupId>
			<artifactId>snakeyaml</artifactId>
			<version>${snakeyaml.version}</version>
		</dependency>

		<!-- xxl-job-core -->
		<dependency>
			<groupId>com.xuxueli</groupId>
			<artifactId>xxl-job-core</artifactId>
			<version>1.9.1</version>
			<!--<version>2.0.1</version>-->
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!--docker打包-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>

			<!--
				如果package时不想打包Image可以这样:
				mvn clean package -Ddockerfile.skip
			-->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>${dockerfile.maven.plugin.version}</version>

				<executions>
					<execution>
						<id>default</id>
						<goals>
							<!--如果package时不想用docker打包,就注释掉这个goal-->
							<!--<goal>build</goal>-->
							<goal>push</goal>
						</goals>
					</execution>
				</executions>

				<!--mvn goal -Ddockerfile.username=... -Ddockerfile.password=...-->
				<configuration>
					<repository>${docker.repostory}/${docker.project}</repository>
					<tag>${docker.version}</tag>
					<useMavenSettingsForAuth>true</useMavenSettingsForAuth>
					<!--<username>admin</username>-->
					<!--<password>Harbor12345</password>-->
					<buildArgs>
						<!--提供参数向Dockerfile传递-->
						<JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
					</buildArgs>
				</configuration>
			</plugin>
		</plugins>

		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
			</resource>
		</resources>

	</build>

</project>
